@use "../mixins/selectors/article-selectors" as Article;
@use "../mixins/selectors/header/article-header" as Article-Header;
@use "../mixins/selectors/metadata/article-meta" as Article-Metadata;
@use "@SASS-Abstracts" as *;
@use "../tokens/default.scss" as *;

// Todo - Tutto qui dentro dev'essere tokenizzato

@include Article.Default {
  /* Tokenize everything in here */
  height: 100%;
  width: 100%;

  // Will be padding & size agnostic

  background: transparent;
  color: set-color(
    $light: $clr-neutral-700,
    $dark: $clr-neutral-300
  ); // Todo - Tokenize anyway

  @include Article.Header {
    font-family: $article-default-header-font-family;
    font-size: $article-default-header-font-size;
    font-weight: $article-default-header-font-weight;
    line-height: $article-default-header-line-height;
    letter-spacing: $article-default-header-letter-spacing;
    text-decoration: $article-default-header-text-decoration;
    text-transform: $article-default-header-text-transform;

    text-wrap: pretty;

    color: $article-default-header-color;
    background: $article-default-header-background;

    z-index: 1;
    /* prettier-ignore */
    h1, h2, h3, h4, h5, h6 { font-size: 1em; }
    /* prettier-ignore */
    @include Article-Header.Title-Small { display: none; }
    // Importante che almeno uno dei due title venga rimosso dall'accessibility tree
  }

  @include Article.Content {
    font-family: 1;
    font-size: 1.05rem;
    font-weight: 1;
    letter-spacing: 1;
    line-height: 1.1;
    text-decoration: 1;
    text-transform: 1;
    text-wrap: balance;
    color: 1;
    background: 1;

    overflow-y: auto;
  }

  @include Article.Metadata {
    font-family: 1;
    font-size: 1rem;
    font-weight: 500;
    color: 1;
    background: 1;

    border: none;
    border-radius: none;
    box-shadow: none;

    @include Article-Metadata.Wrapper-Horizontal("Every") {
      display: flex;
      width: 100%;
    }
  }

  @include Article.Thumbnail {
    display: flex;
    height: 100%;
    anchor-name: --article-thumbnail;
  }

  @include Article-Metadata.Category-List {
    display: flex;
    flex-wrap: wrap;
    > li {
      @include flex-center;
    }
  }
  @include Article-Metadata.Category {
    background-color: $clr-primary-700;
    padding: 0.25rem;
  }

  // Todo - Da sistemare allocazione
  @include Article-Metadata.Category-Wrapper-Position("above-header") {
    position: absolute; // Using absolute will anchor it to the header
    /*prettier-ignore*/
    top: calc( 0rem - 0.5rem - 0.25rem ); // Top 0 should be always slightly beyond the header // Always add the gap and the padding of the category
    left: 1.25rem;
  }

  @include Article-Metadata.Category-Wrapper-Position("top-left") {
    position: fixed; // Using fixed will anchor it to the containment context ( the container )
    top: calc(0rem + 1.25rem); // Todo - Automatize into header padding
    left: calc(0rem + 1.25rem); // Todo - Automatize into header padding
  }

  @include Article-Metadata.Category-Wrapper-Position("top-right") {
    position: fixed; // Using fixed will anchor it to the containment context ( the container )
    top: calc(0rem + 1.25rem); // Todo - Automatize into header padding
    right: calc(0rem + 1.25rem); // Todo - Automatize into header padding
  }

  @include Article-Metadata.Category-Wrapper-Position("custom") {
    position: fixed;
    top: 0; // Todo - Si potrebbe settare un token per permettere il posizionamento custom della category wrapper
    left: 0; // Todo - Si potrebbe settare un token per permettere il posizionamento custom della category wrapper
  }
}

// Da finire - Should i include also padding & co - Should i include overlay dark thumbnail (?)

// Category, Tags, ECC

// Automatic Layout Fallbacks - Shrinkin the containmnet context (?)
// Todo - Da vedere che cosa ne pu√≤ uscire qua di buono
// Todo - Da rivedere meglio questi breakpoints e convertirli in em
//        Todo - Magari tokenizzarli
@include Article.Default {
  @container (width <= 250px) {
    // Fallback to miniature
    // Only display title

    // @include Article.Metadata {
    //   display: none !important;
    // } // ! Todo - This needs a review ^ Maybe we should delete, and handle this kind of thing in own-preview stylesheet | Yes i agree

    @include Article.Content {
      // ! This also? And we only keep here things related to the titles small and full
      display: none !important;
    }
    @include Article.Thumbnail {
      // ! This also? And we only keep here things related to the titles small and full
      flex-basis: 100% !important;
    }
    @include Article.Header {
    }
  }

  // Todo - Questo mi piace
  // Todo - Da rivedere meglio questi breakpoints e convertirli in em
  //        Todo - Magari tokenizzarli
  @container (height <= 200px) or (width <= 225px) {
    @include Article.Header {
      @include Article-Header.Title-Full {
        display: none;
        // Importante che almeno uno dei due title venga rimosso dall'accessibility tree
      }
      @include Article-Header.Title-Small {
        display: block;
      }

      // @include Article.Metadata {
      //   display: none;
      // } // ! Todo - This needs a review ^ | Maybe we should delete, and handle this kind of thing in own-preview stylesheet | Yes i agree
    }
  }
}
