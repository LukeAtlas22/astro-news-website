---
import { AstroError } from 'astro/errors';
import { parseHTML } from 'linkedom'
import { wrapper } from './utils/getSlotLength';

const html = await Astro.slots.render('default')
const { document } = parseHTML(html)
const children = Array.from(document.children);

interface Props {
  class: string,
  type: 'unordered' | 'ordered',
  style: string,
  classItems?: string,
};
const { 
  type = 'unordered', 
  class: className, 
  style,
  classItems = `${className}__item`, 
  ...props
  } = Astro.props;

if (type !== 'unordered' && type !== 'ordered') throw new AstroError('Wrong type for <List/>');

const wrappedChildren = wrapper({
  elements: children,
  classList: classItems,
  wrapper: 'li',
  html: html,
});

{/* Migliorare: Fare solo 1 statement */}
---
{
  (type === 'unordered') &&
  <ul class={className} style={style} {...props}>
      {wrappedChildren}
  </ul>
}
{
  (type === 'ordered') &&
  <ol class={className} style={style} {...props}>
      {wrappedChildren}
  </ol>
}

{/* This component generates a ul, and wraps every children inside an <li> */}


