@use "../../../abstracts" as *;

// Todo - Maybe it wants to be contained "size" (?)

$carousel-width: clamp(18rem, 95cqw, 40rem); //Container: 'container' | Only use cqw
$carousel-height: clamp(10rem, 65cqw, 27.75rem); //Container: 'container' | Only use cqw
$carousel-border-radius: 12px; //clamp(1rem, 12cqw, 2.75rem);
$carousel-background: rgba(128, 128, 128, 0.267);

$carousel-sizing-behaviour: ignore-navigation-size; // stretch-with-navigation || ignore-navigation-size
// Note - Secondo me questa complica molto le cose - 
// Note - Togliamola, e facciamo che l'unica fonte di verità per le dimensioni del carosello è carousel width e height.
// Note - In fondo, quand'è che avrò bisogno di un carosello che stretcha appresso alla navigation? mi sembra assurdo
//

$carousel-slide-width: 100%;
$carousel-slide-height: 100%;
$carousel-slide-first-margin-start: 0%;
$carousel-slide-last-margin-end: 0%;
$carousel-slide-gap: 5.75%;
//$carousel-slide-amount: 4; // Provide the number of slides for computing reasons

$carousel-scroll-behaviour: smooth;
$carousel-scroll-direction: horizontal;
$carousel-scroll-snap-type: mandatory;
$carousel-scroll-snap-stop: always;
$carousel-scroll-snap-align: start;

$carousel-scroll-infinite-scroll: false;
$carousel-scroll-infinite-scroll-type: order; // change-orders || duplicate-elements (The first it's better for performance but it doesn't work everywhere)
$carousel-scroll-auto-scroll: false;
$carousel-scroll-auto-scroll-speed: 2225; // in ms

$carousel-gap-between-carousel-and-navigation: 2.5rem;

$carousel-buttons-display: yes; // yes || no - no means that all the code related to the buttons it will not be loaded - if you need to responsively display the buttons, then delegate it to the buttons-positions-map.
$carousel-buttons-width: clamp(3.75rem, 10vw, 4.5rem);
$carousel-buttons-height: clamp(3.75rem, 10vw, 4.5rem);
$carousel-buttons-border-radius: 120vw;
$carousel-buttons-orientations-map: ( 
  // Valid orientations: horizontal || vertical
  horizontal
);
$carousel-buttons-positions-change-property: --buttons-position; //Leave it like that | Dovrei lasciarlo così?
/** Docs $carousel-buttons-position-map
 *
 * Mappa che definisce le posizioni disponibili per i pulsanti del carosello.
 * Le chiavi possono essere media queries (opzionali), i valori sono stringhe
 * che rappresentano la posizione del bottone.
 *
 * Valori validi:
 * - outside-carousel
 * - feet-carousel
 * - head-carousel
 * - inside-carousel
 * - left-carousel
 * - right-carousel
 * - display-none
 * - inside-navigation
 *
 * - Sintassi media query:
 * - ([min || max], width, breakpoint)
 *
 * Esempio d’uso:
 * (
 *   (min, width, 1000px): outside-navigation,
 *   (max, width, 1000px): inside-navigation
 * )
 */
$carousel-buttons-positions-map: (
  feet-carousel
);
$carousel-buttons-position-outside-carousel: (horizontal-offset: 2.75rem, vertical-offset: 0.0rem);
$carousel-buttons-position-inside-carousel:  (horizontal-offset: 2.75rem, vertical-offset: 0.0rem);
$carousel-buttons-position-feet-carousel:    (horizontal-offset: 0.00rem, vertical-offset: 3.725rem); // Note - Magari c'è un modo automatico per farlo?
$carousel-buttons-position-right-carousel:   (horizontal-offset: 1.25rem, vertical-offset: 0.0rem);
$carousel-buttons-position-left-carousel:    (horizontal-offset: 0.00rem, vertical-offset: 0.0rem);
$carousel-buttons-position-inside-navigation: (
  margins-from-scroll-markers-group-when-default: 0rem,             // Only works with buttons position inside navigation
  margins-from-scroll-markers-group-when-use-counter-numbers: 0rem, // Only works with buttons position inside navigation
  margins-from-scroll-markers-group-when-use-slide-image: 0rem,     // Only works with buttons position inside navigation
);
$carousel-buttons-borders: 0px 0px 0px 2px white; // It's a box shadow but we use it as border
$carousel-buttons-box-shadows: $carousel-buttons-borders;
$carousel-buttons-background: transparent; 
$carousel-buttons-color: red; 

$carousel-buttons-arrow-icon-shape: 1; // The SVG Shape (1-3)
$carousel-buttons-arrow-icon-inset: 0;
$carousel-buttons-arrow-icon-rescale: 1; // Leave it
$carousel-buttons-arrow-icon-stroke-width: 2;
$carousel-buttons-arrow-icon-color: red;
$carousel-buttons-arrow-icon-outline: 0.75; 
$carousel-buttons-arrow-icon-outline-offset: 0;
$carousel-buttons-arrow-icon-outline-color: white;

// ▄▀▀ ▄▀▀ █▀▄ ▄▀▄ █   █      █▄ ▄█ ▄▀▄ █▀▄ █▄▀ ██▀ █▀▄    ▄▀  █▀▄ ▄▀▄ █ █ █▀▄ 
// ▄█▀ ▀▄▄ █▀▄ ▀▄▀ █▄▄ █▄▄    █ ▀ █ █▀█ █▀▄ █ █ █▄▄ █▀▄    ▀▄█ █▀▄ ▀▄▀ ▀▄█ █▀  

// Note - Sarà importante esporre una buona documentazione
// Note - Questa mappa astrae il lavoro di preoccuparsi del posizionamento dello scroll marker group
// Note - Tutto ciò relativo al posizionamento viene effettuato qui dentro (SRP)


// Note - Inserire nella documentazione: Usare justification center se i buttons non sono ancorati **all'interno** della navigation
// Note - Sarà importante creare una buona documentazione - Con tanti examples

$carousel-navigation:( // Note - Name is temporaney
  'default': (
    position: after, // Done
    position-inset: (top: 1rem, right: 1rem), // Note - Done (Almost) Problema con defaults (container querys with ANDs)
    orientation: horizontal, // Done
    justification: center, // Done
    alignment: center, // Note - I don't know if this should be here

    gap: 1.25rem, // Done
    
    outline: none,        // Done 
    outline-offset: none, // Done
    outline-radius: none, // Done
    
    marker-size: 24px, // Done 
    marker-style: default, // Done
  ),

  '(width > 1000px)': (
    position: before, // before | after | inside-frame
    orientation: vertical, // vertical | horizontal
    justification: center, // left | center | right
    alignment: center, // only center - may be removed

    gap: 2.25rem, // Note - Aggiungerò anche il gap
    
    outline: none,
    outline-offset: none,
    outline-radius: none,
    
    marker-size: 52px, // Note - we won't handle size anymore in the style map
    marker-style: slide-image, // default | counter-numbers | slide-own-image
  ),
);

$carousel-scroll-marker-group-self-alignment: center; // Notes - Questo si può anche togliere dato che sarà sempre center // - Rimuoverla (?)



// Note - Rivedere i tokens della mappa style
$carousel-scroll-marker-styles:( // Note qui va bene
  // Memo - Do not declare width or height in here
  
  // ▄▀▀ ▀█▀ ▀▄▀ █   ██▀    █▀▄ ██▀ █▀ ▄▀▄ █ █ █   ▀█▀ 
  // ▄█▀  █   █  █▄▄ █▄▄    █▄▀ █▄▄ █▀ █▀█ ▀▄█ █▄▄  █  

  default:(
    border-radius: 100vw,
    background-color: pink,
    background-color-hover: rgb(253, 106, 131),
    background-color-active: rgb(243, 36, 71),
    background-color-target-current: rgb(253, 23, 61),

    // Note - Decidemmo di usare box-shadow perchè outline dava problemi in fase di transitioning 
    // Note - Comunque, meglio l'outline, non mi va di usare box-shadow

    
    //outline-visible: 3px solid goldenrod, // Todo - Bisogna fixare questo problema nel mixin. Magari usiamo un nuovo mixin, tipo Simple Map sulla falsariga di Breakpoint Map che ci permette di scegliere la prop di arrivo in css

    
    box-shadow: 0px 0px 0px 0.25px red,
    box-shadow-hover: 0px 0px 0px 0.25px red,
    box-shadow-active: 0px 0px 0px 0.25px cyan,
    box-shadow-target-current: 0px 0px 0px 0.3px white,

    // Box shadow offset
    border: 3px solid transparent,   
 
    // Keyboard navigation
    outline-focus-visible: 1.25px solid rgb(147, 147, 255),
    outline-offset: 3.25px,

    // Note - Non voglio usare outline
    // Memo - all'interno di ::Scroll-marker ci sarà outline: none
    // ! Outline da problemi di animazione su questo marker element
    // Todo Dobbiamo comunque risolvere il problema -visible nel mixin

    scale-hover: 1.1,
    scale-target-current: 1.25, // Note this has to be inferred as max scroll marker scale ratio
    transition: 375ms,
  ),

  // Note - Forse per questo bisogna usare javascript, per ottimizzarlo bene.
  slide-image-path:'https://picsum.photos/800/400?random', divisor: '=', ext: '', 
  // Note - Qui non so se conviene farlo così... 
  // Note - Forse potrei usare Astro - 
  // Note - Magari potrei usare dei mini-placeholder per delle immagini molto piccole estrapolate con getImage e caricarli solo se nella mappa layout c'è "slide-image"
  // Memo - Do not declare width or height in here
  slide-image:(
    background-color: transparent,
    background-color-hover: transparent,
    background-color-active: transparent,
    background-color-target-current: transparent,
    background-size: cover,
    background-repeat: no-repeat,
    background-position: center,
  ),

  // Memo - Do not declare width or height in here
  counter-numbers:(
    background-color: black,
    background-color-hover: black,
    background-color-active: black,
    background-color-target-current: black,
    // Note - If things does not change - I may want to use Selective-Assignment to Better abstract naming conventions.
    color: gray,
    color-hover: gray,
    color-active: white,
    color-target-current: #fff, // Strange behaviour - Use -active
    box-shadow: 0px 0px 0px 2px gray,
    box-shadow-hover: 0px 0px 0px 2px gray,
    box-shadow-active: 0px 0px 0px 2px white,
    box-shadow-target-current: 0px 0px 0px 2px white,
    border: 4px solid transparent, //! Used as border offset
    font-family: Arial, 
    font-size: 1.75rem,
    font-weight: bold,
    text-decoration: none,
  ),
);
  
$carousel-debug-mode-on: no; // yes || no



