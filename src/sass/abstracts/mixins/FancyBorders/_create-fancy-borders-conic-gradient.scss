@use "../../tokens" as *;

//! Note - Questo dovrebbe essere un abstract, ma stavamo facendo dei test quindi importa del codice in fase di build - Dunque per ora lo disabilitiamo
//! Note - è stato anche rimosso dal forward dell'index

@mixin temporaney-disabled {

  @property --gradient-angle {
    syntax: "<angle>";
    initial-value: 90deg;
    inherits: false;
  }


  // Note - 
  // Note - La scelta dell'informazione dei colori all'interno il conic gradient
  // Note -   Poitre fare diversi template che mi permettono di assegnare diverse tipologie di glow, tipo full, 50/50 transparency, minimal, ecc

  // Note - Un'altra cosa che vorrei fare è la possibilità di assegnare più borders alla stessa istanza


  $card-foreground: transparent; 

  $borders-thickness: 3px;
  $borders-offset: 0px;

  $borders-foreground-clr: #040e209a;
  $borders-foreground-opacity: 0.25;

  // Borders

  $transparancy: transparent; 
  $clr-1: #00a2ff;
  $clr-2: #1348ac;
  $clr-3: #153e97;

  $speed: 5.5s;

  /* Aesthetic */
  .card {
    position: relative; // < Also important - Or it has to be contain:layout || container-type: inline-size || container-type: size
    height: 24rem;
    width: 24rem;
    border-radius: 0;
    background-color: $card-foreground; // < This is important 

    
  }
  // ------------

  .borders-wrapper {
    
    border-radius: inherit; // < This is important
    background-color: inherit;  // < This is important
    z-index: -99;
    inset: 0;
    
  }

  .borders-wrapper[data-position='absolute']{ position: absolute; }
  .borders-wrapper[data-position='fixed']{ position: fixed; }

  .borders {
    
    border-radius: inherit; // < Also important
    position: absolute;
    z-index: -1;
    
    background: conic-gradient(
      from var(--gradient-angle),
      $clr-1,
      $clr-2,
      $clr-1,
      #1349ac69,
      transparent,
      transparent,
      transparent,
      transparent,
      transparent,
      transparent,
      #1349ac69,
      $clr-1,
    );
    animation: fancy-borders-conic-gradient $speed linear infinite;

    padding: $borders-thickness;
    inset: calc(($borders-thickness * -1) - $borders-thickness - $borders-offset);
  }

  .foreground{
    border-radius: inherit;
    position: absolute;
    z-index: -9999;  
    
    padding: calc($borders-thickness + 2px);
    inset: calc(($borders-thickness * -1) - ($borders-thickness + 1px) - $borders-offset);
    
    opacity: $borders-foreground-opacity;
    background-color: $borders-foreground-clr;
  }

  .borders,.foreground{
    // Masking only the internal part of the element
    mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
    mask-composite: exclude;  
  }


  @keyframes fancy-borders-conic-gradient {
    0% {
      --gradient-angle: 0deg;
    }
    100% {
      --gradient-angle: 360deg;
    }
  }

}