// /* This has been momentanaley erase from testing - Maybe i do something else */

// @use "../mixins/selectors/article-selectors" as Article;
// @use "@SASS-Abstracts" as *;
// @include Article.Every {
//   @include Article.OwnLink {
//     @include absolute-anchor-inset(0);
//     z-index: 2;
//     background-color: rgba(255, 0, 0, 0.151);
//     cursor: pointer;

//     &[data-style-anchor-to="header"] {
//       position-anchor: --article-header;
//     }
//     &[data-style-anchor-to="thumbnail"] {
//       position-anchor: --article-thumbnail;
//     }
//     &[data-style-anchor-to="full-box"] {
//       position-anchor: none;
//       inset: 0;
//     }
//   }
// }

// // Should this be here?
// @include Article.Every {
// }
// @include Article.Header {
//   anchor-name: --article-header;
// }

// // Just testing here
// @include Article.Metadata {
//   background-color: green;
// }
// .article__author {
//   anchor-name: --author-test;
// }
// .author__address-link {
//   position-anchor: --author-test;
//   background-color: rgb(19, 75, 197);
//   z-index: 99;
//   cursor: wait;
//   @include absolute-anchor-inset(0.3rem);
// }
// .article__date {
//   anchor-name: --date-test;
// }
// .article__date-link {
//   position-anchor: --date-test;
//   z-index: 99;
//   background-color: purple;
//   cursor: pointer;
//   @include absolute-anchor-inset(0.3rem);
// }
// .article__metadata--category {
//   anchor-name: --category-test;
// }

// // Looks like we can't use a variation more than 0.3rem
// $variation: 0.3rem;
// .article:has(.category-wrapper[data-style-position="top-left"]) {
//   .article__category-links-wrapper {
//     // Mimic position for fixed position
//     position: fixed;
//     top: 1rem;
//     left: 1rem;

//     //^^ [Readme] 1.25 rem è l'heading padding / general padding - forse dobbiamo fixare qui
//   }
//   //Todo Per il resto se la position non è top-left o top-right significa che è absolute o fixed, quindi va bene lo stile che abbiamo sotto
// }
// .article__category-links-wrapper {
//   // Todo - Unico problema è che questo mirror wrapper si dovrebbe prendere solo gli stili di tipografia del main category wrapper, però atm si prende tutto
//   // Todo - Dobbiamo solo stare attenti qua e assicurarci che il mirror links wrapper, abbia sempre gli stili giusti per ogni article
//   // Todo - Maybe possiamo fare un hard reset di tutte le property qui e/o gestirla meglio di là
//   position-anchor: --category-test;
//   // Todo Qui devo allinearlo con category - Ma come faccio?
//   // Todo - Forse un modo c'è
//   // Todo . E consiste nell'usare l'attribute   position: absolute;
//   top: anchor(top);
//   left: anchor(left);
//   right: anchor(right);
//   bottom: anchor(bottom);
//   color: transparent;
//   outline: 2px solid black;
//   justify-content: start;

//   // It might mimic at the perfection honestly
//   z-index: 99;
//   > a {
//     padding: 0.25rem;
//     background-color: blue;
//   }
//   padding-right: 1.25rem;
//   opacity: 0.5;
// }
// // Todo - Dovrò farne uno anche per category mi sa

// //Abbiamo risolto il problema di accessibilità grazie al miracoloso anchor position
// // Todo - La cosa bella è che posso espandere l'inset
// // Todo - Dopo voglio fare pure i tool tip per ogni cosa

// /*
// in realtà mi è venuta una grande idea! cavolo! potrei fare tipo...
// tramite css
// io ho delle zone che mi segnano dove sono i link author, date, ecc - potrei fare che se
// .link-zone-author:is(:hover) {
//   Article-OwnLink-Overlay{
//       display: block;
//    }
// }

// Possiamo provarla come alternativa
// */

// // Todo - Ma in realtà io l'ho fatto, cioè non devo fare nient'altro, ho tutto quello che mi serve, ora tocca solo tokenizzare, credo che così possa andare bene.
