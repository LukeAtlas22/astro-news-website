@use "../../../abstracts/" as *;
@use "sass:map";
@use "sass:meta";

// #region Mixins, etc - Tutto da spostare

@mixin Macro-Layout($at, $grid-template){
  @media (width #{$at}){
    grid-template: $grid-template;
  }
}

@mixin Macro-Layouts($macro-layout-map){
  @each $index, $map in $macro-layout-map{
    $breakpoint: map.get($map, at);
    $grid-template: map.get($map, grid-template);
    $query-target: map.get($map, query);
    $container-name: map.get($map, name);

    @if ($query-target == 'container'){
      @if ($container-name == null){
        $container-name: '';
      }
      @container #{$container-name} (width #{$breakpoint}){
        grid-template: $grid-template;
      }
    }
    
    @media (width #{$breakpoint}){
      grid-template: $grid-template;
    }
  }

  /* Removing items that are not on the grid-template yet */
  grid-auto-columns: 0px;
  grid-auto-rows: 0px;
}

@mixin at($breakpoint){
  //...
}

@mixin display-at($breakpoint){
  display: none;
  @media (width #{$breakpoint}){
    display: block;
  }
}

// #endregion


/*
Todo - Molto importante mantenere insieme le declaration di grid-area (sui singoli figli della grid), e le declarations di grid template ! - Incluso display-at
Todo - Perchè sono logicamente e intuitivamente e anche materialmente legate (se cambio qualcosa nei grid-templates, probabilmente cambio qualcosa nei grid-area o nei display-at
Todo -
*/

// Tutto quello che vedi qui andrebbe in un singolo file, o perlomeno dovrebbe essere collegato, in qualche modo.

$PAD: 0.75rem;
$GAP: 2rem;

// Todo - Da rivedere padding e gap, vedere come fare...

$Macro-Layout-Map: (
  Layout-1: (
    at: '< 500px',
    grid-template: 
    "TESTX TESTX TESTX TESTX TESTX" 1fr
    "BLUEE BLUEE BLUEE BLUEE BLUEE" 1fr
    "YELLW YELLW YELLW YELLW YELLW" 1fr
    "PURPL PURPL PURPL PURPL PURPL" 1fr, cols:
      1fr   1fr   1fr   1fr   1fr // Così anche è figo
  ),

  Layout-2: (
    at: '> 500px',
    grid-template:
    "TEST TEST TEST TEST TEST" 1fr 
    ".... BLUE BLUE BLUE ...." 1fr 
    ".... YELW YELW YELW ...." 1fr 
    "PURP PURP PURP PURP PURP" 1fr / #{$PAD} 1fr 1fr 1fr #{$PAD}
  ),

  Layout-3: (
    at: '> 750px',
    grid-template:
    "TEST TEST TEST TEST TEST" 1fr 
    ".... YELW BLUE BLUE ...." 1fr 
    ".... YELW BLUE BLUE ...." 1fr 
    "PURP PURP PURP PURP PURP" 1fr / #{$PAD} 1fr 1fr 1fr #{$PAD}
  ),

  Layout-4: (
    at: '> 1200px',
    grid-template:
    "TEST TEST TEST TEST TEST TEST TEST" 1fr 
    ".... YELW YELW .... BLUE BLUE ...." 1fr 
    ".... YELW YELW .... BLUE BLUE ...." 1fr 
    "PURP PURP PURP PURP PURP PURP PURP" 1fr / #{$PAD} 1fr 1fr #{$GAP} 1fr 1fr #{$PAD}
  ),

  Layout-5: (
    at: '> 1400px',
    grid-template:
    "TEST TEST TEST TEST TEST TEST TEST TEST" 1fr 
    ".... YELW .... WHIT .... BLUE BLUE ...." 1fr 
    ".... YELW .... WHIT .... BLUE BLUE ...." 1fr 
    "PURP PURP PURP PURP PURP PURP PURP PURP" 1fr / #{$PAD} 1fr #{$GAP} 1fr #{$GAP} 1fr 1fr #{$PAD}
  ),

  Areas:(
    'red': 'TEST',
    'yellow': 'YELW',
    'blue': 'BLUE',
    'purple': 'PURP',
    'white': 'WHIT',
  ),
);

.macro-layout {
  display: grid;
  min-height: 100vh;

  @include Macro-Layouts($Macro-Layout-Map);
  
  row-gap: 2rem;
  
}

.red{
  grid-area: TEST;
}

.yellow{
  grid-area: YELW;
}

.blue{
  grid-area: BLUE;
}

.purple{
  grid-area: PURP;
}

.white{
  grid-area: WHIT;
  @include display-at('> 1400px');
}

// #region Ideally, in another file
.red{
  background: red;
}
.yellow{
  background: goldenrod;
}
.blue{
  background: blue;
}
.purple{
  background: purple;
}
.white{
  background: white;
}
// #endregion