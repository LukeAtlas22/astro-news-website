@use "../../../abstracts/" as *;
@use "tokens" as *;

// Container

.carousel__container {
  // Note - In realtà questo non dovrebbe essere il containment context, ma soltanto il variables container, cioè un contenitore che contiene tutte le variabili css sul quale gli elements child svolgono delle container style query.  
  // Todo - Cambiare questo nome in qualcosa di più intent-revealing, in quanto l'unica cosa che fa è essere da contenitore di variabili sul quale tutti gli elementi possono fare query
  @include create-container($type: normal, $name: --carousel-container);
}

.carousel__anchor-scope {
  anchor-scope: --carousel;
}


// Wrapper

.carousel__wrapper {
  
  // Note qui è da rifare tutta la logica del wrapper
  padding: 2rem;

  display: grid;
  //gap: $carousel-gap-between-carousel-and-navigation;
  // Note - Removed from here
  
  border: 3px solid red;

  // Note - Allora qua bisogna fare alcune considerazione - La width e la height che applichiamoa  carousel, in realtà il nostro intento è applicarla alla frame, che può essere una row o una column della main grid dichiarate all'interno di __Wrapper (cioè le grid sotto) - 
  
  // Note - Dunque, dovremmo lasciare qui, width e height in auto, perchè il sizing della column o row dedicata alla frame lo stiamo decidendo sotto
  // Note - Così come il sizing della column o della row dedicata alla navigation
}


$-Navigation-Space: var(--scroll-markers-size);
$-Frame-Space--Horizontal: $carousel-width;
$-Frame-Space--Vertical: $carousel-height;
$-Wrapper-Gap: $carousel-gap-between-carousel-and-navigation;

.carousel__wrapper {
  // Todo - Devo scrivere queste if
  @if (true) { 
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: before) and 
        style(--scroll-marker-group-orientation: vertical) {
          // Note - Posso migliorare la leggibilità di questo codice?
          // Note - Ci sono molte cose da migliorare.
          grid-template-columns: $-Navigation-Space $-Frame-Space--Horizontal; 
          grid-template-rows: $-Frame-Space--Vertical;
          column-gap: $-Wrapper-Gap;

          // Todo - Carousel-width deve diventare var
      }
    }
    
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: before) and
        style(--scroll-marker-group-orientation: horizontal) {
          grid-template-rows: $-Navigation-Space $-Frame-Space--Vertical;
          grid-template-columns: $-Frame-Space--Horizontal;
          row-gap: $-Wrapper-Gap;
      }
    }
  }

  @if (true) {
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: after) and
        style(--scroll-marker-group-orientation: vertical) {
          grid-template-columns: $-Frame-Space--Horizontal $-Navigation-Space;
          grid-template-rows: $-Frame-Space--Vertical;
          column-gap: $-Wrapper-Gap;
        }
    }

    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: after) and
        style(--scroll-marker-group-orientation: horizontal) {
          grid-template-rows: $-Frame-Space--Vertical $-Navigation-Space;
          grid-template-columns: $-Frame-Space--Horizontal;
          row-gap: $-Wrapper-Gap;
        }
    }
  }

}

.carousel {
  margin-inline: auto;
  position: relative;
  width: 100%;
  height: 100%;
  // @if ($carousel-sizing-behaviour == ignore-navigation-size) {         
  //   // Note - Questo ci serve davvero? Non ha senso, ogni cosa gestisce le sue dimensioni, invividualmente, un sizing di un elemento non dovrebbe dipendere dal sizing di un altro elemento
  //   width: $carousel-width;
  //   height: $carousel-height;
  // } @else if ($carousel-sizing-behaviour == stretch-with-navigation) { 
  //   // Note - Questo ci serve davvero? Non ha senso, ogni cosa gestisce le sue dimensioni, invividualmente, un sizing di un elemento non dovrebbe dipendere dal sizing di un altro elemento
  //   width: 100%;
  //   height: 100%;
  // }
  background: $carousel-background;
  align-items: center; // Don't justify
  border-radius: $carousel-border-radius;
  gap: $carousel-slide-gap;

  anchor-name: --carousel;
  counter-reset: carousel-slide-counter 0; //Todo: create-counter mixin
  @include create-snap-scroller(
    $direction: $carousel-scroll-direction,
    $scroll-snap-type: $carousel-scroll-snap-type,
    $scroll-snap-stop: $carousel-scroll-snap-stop,
    $scroll-snap-align: $carousel-scroll-snap-align,
    $scrolling-items-selector: ".carousel__slide",
    $scroll-behaviour: $carousel-scroll-behaviour,
    $scrollbar: none
  );
}



