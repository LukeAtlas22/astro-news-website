@use "tokens" as *;
@use "carousel-functions/carousel-functions.scss" as Carousel;
@use "../../../abstracts/" as *;
@use "sass:map";


// Note - Magari questa roba potrebbe essere spostata in position o positioning
 
@function User-Needs($entry){ @return Breakpoint-Map--does-map-contains--entry($map: $carousel-navigation, $target-entry: $entry) };

.carousel__container{
  @include Breakpoint-Map--Retrive-Multiple-Properties(
    $Map: $carousel-navigation, 
    $props-map: (
      (
        prop-name: position,
        as: --scroll-marker-group-position,
      ),
      (
        prop-name: orientation,
        as: --scroll-marker-group-orientation,
      ),
      (
        prop-name: gap,
        as: --scroll-marker-group-gap, // Need like that because we use it in calculations
      ),
      (
        prop-name: marker-size,
        as: --scroll-marker-size,
      ),

      /* Evalutating anchor position insets for navigation (scroll marker group) */
      (
        sub-map: position-inset,
        prop-name: top,
        as: --scroll-marker-position-inset--anchor-top,
      ),
      (
        sub-map: position-inset,
        prop-name: right,
        as: --scroll-marker-position-inset--anchor-right,
      ),
      (
        sub-map: position-inset,
        prop-name: bottom,
        as: --scroll-marker-position-inset--anchor-bottom,
      ),
      (
        sub-map: position-inset,
        prop-name: left,
        as: --scroll-marker-position-inset--anchor-left,
      ),
      /* ========================================================================= */
    )
  );
}

.carousel {
  scroll-marker-group: var(--scroll-marker-group-position); 
  // Note forse potrei wrappare questa variabile in una function tipo Dinamyc-CSS-Variable per migliorare la lettura del codice

  @if User-Needs(position inside-frame) {
    @container --carousel-container style(--scroll-marker-group-position: inside-frame){
      scroll-marker-group: after;

      &::scroll-marker-group { 
        outline: 5px solid red !important;
        position: absolute; 
        position-anchor: --carousel;
        
        /* Applying varous anchor insets for the insets of the navigation ============================= */

        @container --carousel-container style(--scroll-marker-position-inset--anchor-top) {    // TOP
          top: calc(anchor(top) + var(--scroll-marker-position-inset--anchor-top));
        }
    
        @container --carousel-container style(--scroll-marker-position-inset--anchor-right) {  // RIGHT
          right: calc(anchor(right) + var(--scroll-marker-position-inset--anchor-right));
        }
    
        @container --carousel-container style(--scroll-marker-position-inset--anchor-bottom) { // BOTTOM
          bottom: calc(anchor(bottom) + var(--scroll-marker-position-inset--anchor-bottom) - 1.5rem);
        }
    
        @container --carousel-container style(--scroll-marker-position-inset--anchor-left) {   // LEFT
          left: calc(anchor(left) + var(--scroll-marker-position-inset--anchor-left));
        }

        /* ============================================================================================ */

        /* Applying - Fallback - Default ============================= */
        // Note - I don't know why this is not working
        // @container --carousel-container 
        //   not style(--scroll-marker-position-inset--anchor-top),
        //   not style(--scroll-marker-position-inset--anchor-right),
        //   not style(--scroll-marker-position-inset--anchor-bottom), 
        //   not style(--scroll-marker-position-inset--anchor-left){
        //     outline: 5px solid red !important;
        //   }
      }
    }

  }

  // Note - Magari questa roba potrebbe essere spostata in position o positioning ^^
  // -----------------------------------------------------------------------------

  &::scroll-marker-group {

    gap: var(--scroll-marker-group-gap); // Leave it

    // Note - Richiede che venga passato il numero di slide in qualche modo <- 
    // Note - Prima usava JS - Ora usa Astro (Passing the props in style attr)
    // inline-size: map.get(map.get($carousel-scroll-marker-styles, use-default), width); - Questo si può togliere
    
    // Self alignment & sizing
    

    @include Breakpoint-Map--Retrive-Multiple-Properties( 
      $Map: $carousel-navigation,
      $props-map:(
        (
          prop-name: justification,
          as: justify-self
        ),
        (
          prop-name: outline,
        ),
        (
          prop-name: outline-offset
        ),
        (
          prop-name: outline-radius,
          as: border-radius,
        ),
      )
    );

    // Note - Anche questo è importante
    // it has to contemplate - Max scaling ratio
    // It has to contemplate - Max outline + outline offset ratio
    // Note - Bisognerebbe aggiungere un calcolo matematico per questo 1.75
    // Note questo 1.75 serve a non far tagliare il marker dell'overflow
    // Note da rivedere un po
    block-size: calc(var(--scroll-marker-size) * 1.75);

    align-self: $carousel-scroll-marker-group-self-alignment;
    
    writing-mode: horizontal-tb;
    // if user needs orientation vertical
    @container --carousel-container style(--scroll-marker-group-orientation: vertical){ // Note valutare come vogliamo fare questo
      writing-mode: vertical-lr;
    }

    flex-direction: row;
    // if User-Needs direction invert
    @container --carousel-container style(--scroll-marker-group-direction: invert){ // Note valutare come vogliamo fare questo
      flex-direction: row-reverse;
    }


    // Note - Inoltre si è detto che questo organismo deve controllare i suoi markers, size < 

    // Anchor
    anchor-name: --scroll-marker-group;
    // Internal markers
    display: flex;
    justify-content: center; // Note queste proprietà sono strane
    align-items: center; 
    overflow: auto;
    scrollbar-width: none;
    scroll-behavior: smooth;    
  }
}

// Note - Questa dovrebbe essere la prima cosa, o almeno una delle prime
// █▄ █ ▄▀▄ █ █ █ ▄▀  ▄▀▄ ▀█▀ █ ▄▀▄ █▄ █       █ █▄ █ █   █ █▄ █ ██▀    ▄▀▀ █ ▀█▀ ██▀       ▄▀▀ ▄▀▄ █   ▄▀▀ █ █ █   ▄▀▄ ▀█▀ █ ▄▀▄ █▄ █ 
// █ ▀█ █▀█ ▀▄▀ █ ▀▄█ █▀█  █  █ ▀▄▀ █ ▀█       █ █ ▀█ █▄▄ █ █ ▀█ █▄▄    ▄█▀ █ █▄▄ █▄▄       ▀▄▄ █▀█ █▄▄ ▀▄▄ ▀▄█ █▄▄ █▀█  █  █ ▀▄▀ █ ▀█ 

  $scroll-marker-inline-size: var(--scroll-marker-size);
  $scroll-marker-group-gap: var(--scroll-marker-group-gap);

  $scroll-marker-group-margins-from-buttons: map.get($carousel-buttons-position-inside-navigation, margins-from-scroll-markers-group-when-use-counter-numbers); 
  // Note probabile anche questo in css var (?)
  // Note - Sì questa va fatta in CSS VAR

  .carousel::scroll-marker-group{
    inline-size: calc(
      ( $scroll-marker-inline-size * var(--carousel-slide-amount) ) +
      ( $scroll-marker-group-gap * var(--carousel-slide-amount)) +
      ( $scroll-marker-group-margins-from-buttons )
    ); 

    // Note - Questa è importante
    /* Prevent carousel stretching along the navigation */
    // Note - Magari qui possiamo migliorarlo, con javascript per avere sempre la miglior vista
    // Note - Magari possiamo migliorarlo con qualche css per far vedere che è presente un overflow
    // Note - Considerare l'uso di animation timeline scroll 
    // Note - Per risolvere il clipping, potrei fare che se c'è overflow metto un po di box shadow
    @container --carousel-container style(--scroll-marker-group-orientation: horizontal) {
      max-inline-size: $carousel-width;
      
    }
    @container --carousel-container style(--scroll-marker-group-orientation: vertical) {
      max-inline-size: $carousel-height;
    }
  }

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



// Questi sono i margins inline, se e quando i buttons vengono inseriti nella navigation
// Questi sono i margins inline, se e quando i buttons vengono inseriti nella navigation
////////////////////////////////////////////////////
/// Notes - I don't know where this should be
/// 
//Todo - Da sistemare meglio
//! Setting inline margins if buttons position it's inside navigation
@if (true){ // If to do
  $buttons-margins: map.get($carousel-buttons-position-inside-navigation, margins-from-scroll-markers-group-when-default);
  $buttons-width: $carousel-buttons-width;
  @container --carousel-container style(--buttons-position: inside-navigation){
    .carousel::scroll-marker-group {
      margin-inline: calc(
        $buttons-width +
        $buttons-margins -
        0.95rem // Tokenize?
      );
    }
  }
}

@if (true){ // If general behaviour it's NOT Stretch with navigation
  $buttons-margins: map.get($carousel-buttons-position-inside-navigation, margins-from-scroll-markers-group-when-default);
  $buttons-width: $carousel-buttons-width;
  @container --carousel-container
  style(--buttons-position: inside-navigation) and
  style(--scroll-marker-group-orientation: vertical) {
    .carousel::scroll-marker-group{
      margin-inline: calc(
        $buttons-width -
        $buttons-margins -
        0.95rem // Tokenize?
      );
    }
  }
}
