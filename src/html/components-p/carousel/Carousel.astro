---
  import List from "@utilities/lists/List.astro"
  import { getSlotLength } from "@utilities/lists/utils/getSlotLength"
  import { parseHTML } from "linkedom";
  import { wrapper } from "@utilities/lists/utils/getSlotLength";
import { AstroError } from "astro/errors";

  const html = await Astro.slots.render('default');
  const slideAmount = getSlotLength(html);
  if (slideAmount < 3)
    throw new AstroError('<Carousel> says: The carousel needs to have at least 3 slides');
  const { document } = parseHTML(html)
  const carouselSlides = Array.from(document.children);

  // Only if using artificial navigation
  const carouselId = Math.floor(1000 + Math.random() * 9000);

  interface Props {
    infiniteScroll: boolean,
    autoplay: boolean,
    /**
     * In seconds
     */
    interval?: number,

    class?: string,
    style?: string, 


    imagesDirectory?: string,              // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
    imagesDirectoryScrollMarkers?: string, // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
  }

  const {
  infiniteScroll,
  autoplay,
  interval = 3.75,

  class: className,
  style,
  ...props
  } = Astro.props;
---

{/* Vuole essere contenuto */}

<div class="carousel__anchor-scope | carousel__variables-scope">
  <div class="carousel__grid-wrapper | carousel__wrapper"> 
    
    <ul class="carousel"
        id={carouselId}
        data-infinite-scroll={infiniteScroll}
        data-autoplay={autoplay}
        data-interval={interval}
        style=`--carousel-slide-amount: ${slideAmount}`
    >
      {
        wrapper({
          id: carouselId,
          elements: carouselSlides,
          wrapper: 'li',
          classList: "carousel__slide",
          html: html,
        })
      }

    </ul>

    {/* This will happen only under determinate conditions
        Make a CarouselNavigation Component (?)
    */}
    <ul class="carousel__scroll-marker-group--artificial">
      {
        carouselSlides.map((slide: Element, i: number) => (
          <li>
            <a 
              href={`#${carouselId}-slide-${i + 1}`} 
              class="carousel__scroll-marker--artificial"
            >
              {/* Various Icon In Here... */}
            </a>
          </li>
        ))
      }
    </ul>

  </div>
</div>

<script>
    const carousel = document.querySelector('.carousel');
    const navigation = document.querySelector('.carousel__scroll-marker-group--artificial');
    
    const infiniteScroll = await import('src/javascript/components/carousel/infinite-scroll/infinite-scroll-wrapper.ts');
    infiniteScroll.initInfiniteScroll(carousel);
    const navigationModule = await import('src/javascript/components/carousel/navigation/target-current-class-dispatcher');
    navigationModule.dispatchTargetCurrentClassOnMarkers(carousel, navigation);
</script>