@use "../../../abstracts/" as *;
@use "tokens" as *;



.carousel__container {
  margin-inline: auto;
  width: $carousel-width;
  height: $carousel-height;
}

.carousel__wrapper {
  @container --carousel-container not style(--scroll-marker-group-position: inside-frame){
    height: calc( $carousel-height);
  }

  @container --carousel-container style(--scroll-marker-group-position: inside-frame){
    height: $carousel-height;
  }
  
  gap: $carousel-gap-between-carousel-and-navigation;

  display: grid;
}

.carousel__wrapper {
  
  @if (true) { 
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: before) and 
        style(--scroll-marker-group-orientation: vertical) {
          grid-template-columns: var(--scroll-marker-size) $carousel-width; 
          // Note - Potrei migliorarlo cos√¨
          // Note - Carousel-width diventerebbe una CSS-Variable, e la userei in ogni breakpoint
          
      }
    }
    
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: before) and
        style(--scroll-marker-group-orientation: horizontal) {
          grid-template-rows: min-content 1fr;
      }
    }
  }

  @if (true) {
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: after) and
        style(--scroll-marker-group-orientation: vertical) {
          grid-template-columns: 1fr min-content;
        }
    }
    @if (true) {
      @container --carousel-container 
        style(--scroll-marker-group-position: after) and
        style(--scroll-marker-group-orientation: horizontal) {
          grid-template-rows: 1fr min-content;
        }
    }
  }
}

.carousel {
  margin-inline: auto;
  position: relative;
  @if ($carousel-sizing-behaviour == ignore-navigation-size) {         
    // Note - Questo ci serve davvero? Non ha senso, ogni cosa gestisce le sue dimensioni, invividualmente, un sizing di un elemento non dovrebbe dipendere dal sizing di un altro elemento
    width: $carousel-width;
    height: $carousel-height;
  } @else if ($carousel-sizing-behaviour == stretch-with-navigation) { 
    // Note - Questo ci serve davvero? Non ha senso, ogni cosa gestisce le sue dimensioni, invividualmente, un sizing di un elemento non dovrebbe dipendere dal sizing di un altro elemento
    width: 100%;
    height: 100%;
  }
  background: $carousel-background;
  align-items: center; // Don't justify
  border-radius: $carousel-border-radius;
  gap: $carousel-slide-gap;

  anchor-name: --carousel;
  counter-reset: carousel-slide-counter 0; //Todo: create-counter mixin
  @include create-snap-scroller(
    $direction: $carousel-scroll-direction,
    $scroll-snap-type: $carousel-scroll-snap-type,
    $scroll-snap-stop: $carousel-scroll-snap-stop,
    $scroll-snap-align: $carousel-scroll-snap-align,
    $scrolling-items-selector: ".carousel__slide",
    $scroll-behaviour: $carousel-scroll-behaviour,
    $scrollbar: none
  );
}

.carousel__anchor-scope {
  anchor-scope: --carousel;
}
.carousel__container {
  @include create-container($type: inline-size, $name: --carousel-container);
}

// #region Debug
@if ($carousel-debug-mode-on == yes) {
  .carousel {
    @include debug;
  }
}
// #endregion
