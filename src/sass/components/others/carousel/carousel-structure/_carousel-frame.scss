@use "@SASS-Abstracts" as *;
@use "../tokens" as *;

.carousel__variables-scope {
  @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
    $Map: $carousel, 
    $props-directives-map: (
      (
        sub-map: frame,
        prop-name: width,
        as: --carousel-frame-width,
      ),
      (
        sub-map: frame,
        prop-name: height,
        as: --carousel-frame-height
      ),
    )
  );
}

.carousel {
  width: 100%;  // leave it
  height: 100%; // leave it
  place-items: center;
  anchor-name: --carousel; 
  counter-reset: carousel-slide-counter 0; //Todo: create-counter mixin
  
  @include Spread-Properties-From-Submap-ForEach-Breakpoint-In-Map(
    $breakpoint-map: $carousel, 
    $submap-to-spread: frame,
    $props-to-exclude: (width, height, gap-between-slides),
  );
  
  @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
    $Map: $carousel, 
    $props-directives-map: (
      (
        sub-map: frame,
        prop-name: gap-between-slides,
        as: gap,
      ),
    )
  );
}

.carousel__variables-scope{
  @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
    $Map: $carousel, 
    $props-directives-map: (
      (
        sub-map: scroll,
        prop-name: direction,
        as: --carousel-scroll-direction,
        validation-hook: axis-long-name,
      ),
      (
        sub-map: scroll,
        prop-name: snap-type,
        as: --carousel-scroll-snap-type,
      ),
    )
  );
}

// Defining scroll behaviour.
.carousel {
  
  display: flex;
  overflow: auto;
  scroll-snap-type: both var(--carousel-scroll-snap-type);
  
  
  @container --carousel-container style(--carousel-scroll-direction: vertical) {
    writing-mode: vertical-lr;
  }
  @container --carousel-container style(--carousel-scroll-direction: horizontal) {
    writing-mode: horizontal-tb;
  }

  @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
    $Map: $carousel, 
    $props-directives-map: (
      (
        sub-map: scroll,
        prop-name: behavior,
        as: scroll-behavior,
      ),
      (
        sub-map: scroll,
        prop-name: scrollbar-width,
      ),
      (
        sub-map: scroll,
        prop-name: scrollbar-color,
      ),
    )
  );

}


.carousel__slide{
    // Note - Contain: layout (?)

    @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
        $Map: $carousel, 
        $props-directives-map: (
          (
            sub-map: scroll,
            prop-name: snap-align,
            as: scroll-snap-align,
          ),
          (
            sub-map: scroll,
            prop-name: snap-stop,
            as: scroll-snap-stop,
          ),
        )
      );

    &:first-child{
      @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
        $Map: $carousel, 
        $props-directives-map: (
          (
            sub-map: slide,
            prop-name: first-slide-margin-start,
            as: margin-inline-start,
            //validation-hook percentage (?)
          ),
        )
      );
    }
    &:last-child {
      @include Consume-PropsDirectives-ForEach-Breakpoint-Map(
        $Map: $carousel, 
        $props-directives-map: (
          (
            sub-map: slide,
            prop-name: last-slide-margin-end,
            as: margin-inline-end,
            //validation-hook percentage (?)
          ),
        )
      );
    }
    
    > * {
      // Memo - Gli elementi all'interno della slide devono essere width: 100% - height: 100%
      width: 100%;
      height: 100%;
    }
  }

