---
  import List from "@utilities/lists/List.astro"
  import { getSlotLength } from "@utilities/lists/utils/getSlotLength"
  import { parseHTML } from "linkedom";
  import { wrapper } from "@utilities/lists/utils/getSlotLength";

  const html = await Astro.slots.render('default');
  const slideAmount = getSlotLength(html);
  const { document } = parseHTML(html)
  const carouselSlides = Array.from(document.children);
  const wrappedCarouselSlides = wrapper({
    elements: carouselSlides,
    wrapper: 'li',
    classList: "carousel__slide",
    html: html,
  });

  interface Props {
    infiniteScroll: boolean,
    autoplay: boolean,
    /**
     * In seconds
     */
    interval?: number,

    class?: string,
    style?: string, 


    imagesDirectory?: string,              // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
    imagesDirectoryScrollMarkers?: string, // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
  }

  const {
  infiniteScroll,
  autoplay,
  interval = 3.75,

  class: className,
  style,
  ...props
  } = Astro.props;
---

{/* Vuole essere contenuto */}

<div class="carousel__anchor-scope | carousel__variables-scope">
  <div class="carousel__grid-wrapper"> 
    
      <List
        type="unordered"
        class="carousel"
        classItems="carousel__slide"
        data-infinite-scroll={infiniteScroll}
        data-autoplay={autoplay}
        data-interval={interval}
        style=`--carousel-slide-amount: ${slideAmount}`
      >
        <slot></slot>
      </List>

      {/* Qui forse devo rifare l'astrazione della list */}
      
  
      <!-- <button class="carousel__button-artificial-after--next"> </button>
      <button class="carousel__button-artificial-after--prev">  </button> -->
      {/* Questi non sono ancora in position absolute, per ora tienili così finchè non li implementi */}

  </div>
</div>

<script >
  if (document.querySelector('.carousel')?.getAttribute('data-infinite-scroll')){
    //I will make the scroll infinite !
  }
</script>