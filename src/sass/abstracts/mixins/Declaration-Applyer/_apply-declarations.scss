@use "sass:map";
@use "sass:string";
@use "helpers/utils" as *;

///
/// @param {CSS Selector} $on - The class on which you will set the declarations
/// @param {SCSS Map} $from - The map where you will get the declarations
/// @output
@mixin apply-declarations($on: '', $from) {
  $on-normal: ();
  $on-hover: ();
  $on-active: ();
  $on-focus: ();
  $on-focus-visible: ();
  $on-target-current: ();

  @each $property, $value in $from {
    @if (has-suffix($string: $property, $suffix: -hover)) {
      $property: remove-suffix($property, -hover);
      $on-hover: map-add($map: $on-hover,$entry: ($property: $value),);
    }

    @else if (has-suffix($string: $property, $suffix: -active)) {
      $property: remove-suffix($property, -active);
      $on-active: map-add($map: $on-active,$entry: ($property: $value),);
    }

    @else if (has-suffix($string: $property, $suffix: -focus-visible)) {
      $property: remove-suffix($property, -focus-visible);
      $on-focus-visible: map-add($map: $on-focus-visible,$entry: ($property: $value),);
    } 

    @else if (has-suffix($string: $property, $suffix: -focus)) {
      $property: remove-suffix($property, -focus);
      $on-focus: map-add($map: $on-focus,$entry: ($property: $value),);
    }
    
    @else if (has-suffix($string: $property, $suffix: -target-current)) {
      $property: remove-suffix($property, -target-current);
      $on-target-current: map-add($map: $on-target-current, $entry: ($property: $value),);
    }

    @else {
      $on-normal: map-add($map: $on-normal,$entry: ($property: $value),);
    }
  }

  // Creo una nuova mappa che contiene tutte le mappe
  $maps: (
    normal: $on-normal,
    hover: $on-hover,
    active: $on-active,
    focus: $on-focus,
    focus-visible: $on-focus-visible,
    target-current: $on-target-current,
  );

  @if ($on == ""){
    @each $state, $map in $maps {
      @if ($state != normal) {
        &:is(:#{$state}, .#{$state}) {
          @each $property, $value in $map {
            #{$property}: $value;
          }
        }
      }
      @if ($state == normal) {
        @each $property, $value in $map {
          #{$property}: $value;
        }
      }
    }
  }

  @if ($on != ""){
    @each $state, $map in $maps {
      @if ($state != normal) {
        #{$on}:is(:#{$state}, .#{$state}) {
          @each $property, $value in $map {
            #{$property}: $value;
          }
        }
      }
      @if ($state == normal) {
        #{$on}{
          @each $property, $value in $map {
            #{$property}: $value;
          }
        }
      }
    }
  }
}

