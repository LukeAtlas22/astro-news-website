---
  import CarouselNavigation from "./CarouselNavigation.astro";
  import { getSlideAmount } from "./utils/get-slide-amount";
  import { parseHTML } from "linkedom";
  import { wrapper } from "./utils/carousel-slide-wrapper";
  import { AstroError } from "astro/errors";

  const html = await Astro.slots.render('default');
  const slideAmount = getSlideAmount(html);
  if (slideAmount < 3)
    throw new AstroError('<Carousel> says: The carousel needs to have at least 3 slides');
  const { document } = parseHTML(html)
  const carouselSlides = Array.from(document.children);

  // Only if using artificial navigation
  const carouselId = (Math.floor(1000 + Math.random() * 9000)).toString();

  interface Props {
    infiniteScroll: boolean,
    autoplay: boolean,
    /**
     * In seconds
     */
    interval?: number,

    class?: string,
    style?: string, 


    imagesDirectory?: string,              // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
    imagesDirectoryScrollMarkers?: string, // Qui ci torniamo, praticamente dobbiamo fare 2 carousel, uno normale, e uno che ha la possibiità di scegliere semplicemente una image directory nelle prop
  }

  const {
  infiniteScroll,
  autoplay,
  interval = 3.75,
  navigation = 'advanced', // temp namespace

  class: className,
  style,
  ...props
  } = Astro.props;

---

{/* Vuole essere contenuto */}

<div class="carousel__anchor-scope | carousel__variables-scope">
  <div class="carousel__grid-wrapper | carousel__wrapper"> 
    
    <ul class="carousel"
        id={carouselId}
        data-infinite-scroll={infiniteScroll}
        data-autoplay={autoplay}
        data-interval={interval}
        style=`--carousel-slide-amount: ${slideAmount}`
    >
      {
        wrapper({
          id: carouselId,
          elements: carouselSlides,
          wrapper: 'li',
          classList: "carousel__slide",
          html: html,
        })
      }

    </ul>

    {
      (navigation === 'advanced') &&
      <CarouselNavigation
      carouselSlides = {carouselSlides}
      carouselId = {carouselId}
      />
    }
    

  </div>
</div>

<script>
  // Usare un component astro per gestire lo sciprt?
    const carouselList = document.querySelectorAll('.carousel');
    
    const infiniteScroll = await import('src/javascript/components/carousel/infinite-scroll/infinite-scroll-wrapper.ts');
    carouselList.forEach(carousel => {
      infiniteScroll.initInfiniteScroll(carousel);
    });
</script>